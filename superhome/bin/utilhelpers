#!/bin/zsh

#=========================#
# General utility Helpers #
#=========================#

# --- MISC ---

function myip() {
    ifconfig | grep "inet[^6]"
}

function dostat() {
    stat -f "name: \"%SN\" path: \"%SR\" type: \"%ST\" permissions: \"%Sp = %Up\" inode \"%Ui\" dev: \"%Sd = %Ud\" hard links: \"%Ul\" size: \"%Uz\" sym link target: \"%SY\"" "$1"
}

function pltoxml() {
    plutil -convert xml1 $1
}

function xmltopl() {
    plutil -convert binary1 $1
}

# --- fzf ---

function fzfpreview() {
    fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'
}

function fzfp() {
    if [ -z $1 ]; then
        local TARGET="."
    else
        local TARGET="$1"
    fi
    #ls -al $TARGET
    find $TARGET -maxdepth 1 | sed 's/^\.\///g' | fzf --preview 'opener {}'
}

function fzfpp(){
    find . | sed 's/^\.\///g' | fzf --preview 'opener {}'
}

function fzfppls(){
    fzfpp | xargs -n 1 -I {} $(echo $aliases[ll]) {}
}

# --- npm ---

function npmglobals() {
  npm list -g --depth 0
}

# --- pip/pypi ---
#
# General note: `SYSTEM_VERSION_COMPAT=0 pip install ...` will get around compatibility tag issues

function pypi() {
    # this works but is deprecated (especially releases key, which may be removed)
    # they are switching to https://peps.python.org/pep-0691/
    # curl -s https://pypi.org/pypi/$1/json | jq -r '.releases | to_entries[] | (.key) + ": " + .value[].filename'
    #
    # pep 691 compliant
    # -s: silent, -L: follow redirect
    curl -s -L --header "Accept: application/vnd.pypi.simple.v1+json" https://pypi.org/simple/$1/ | jq -r '.files[] | .filename'

    # pretty good python lib for this: https://pypi.org/project/pypi-simple/
}

# https://packaging.pypa.io/en/stable/tags.html
# https://packaging.python.org/en/latest/specifications/platform-compatibility-tags/
function pipcompat() {
    if [ "$1" = "-a" ];
    then
        python -c "from packaging.tags import sys_tags;print('\n'.join([f'{t.interpreter}-{t.abi}-{t.platform}' for t in list(sys_tags())]))"
    else
        # below 2 are same, second is more modern
        # distutils is deprecated as of 3.10 and will be removed in 3.12
        #
        #python -c "import distutils ;print(distutils.util.get_platform())"
        python -c "import sysconfig ;print(sysconfig.get_platform())" | tr '-' '_' | tr '.' '_'
    fi
}

# --- dockerhub ---
#
function dockersize() {
  local repo=$1
  local image=$2
  local tag=$3

  if [[ -z "$image" || -z "$tag" ]]; then
    echo "Usage: docker_image_size (<repo>|\"\") <image> <tag>"
    return 1
  fi

  # Construct the URL, using 'library' for official images if no repo is provided
  if [[ -z "$repo" ]]; then
    repo="library"
  fi

  curl -s "https://hub.docker.com/v2/repositories/$repo/$image/tags/$tag" | \
  jq '.images[0].size' | \
  awk '{printf "%.2f MB\n", $1 / (1024 * 1024)}'
}

# --- help ---

function usage() {
    echo "Usage: utilhelpers <cmd> [<args>]"
    echo "Available commands:"
    echo "\thelp: usage (this message)"
    echo "\tmyip: get my ip address"
    echo "\tdostat <dir>: stat the given directory"
    echo "\tpltoxml <plist>: convert binary plist to xml plist"
    echo "\txmltopl <plist>: convert xml plist to binary plist"
    echo "\tfzfpreview: preview with fzf and bat"
    echo "\tfzfp: preview with fzf exa hexyl and bat"
    echo "\tfzfpp: fzf preview all levels"
    echo "\tfzfppls: fzf preview -> select item -> ls it"
    echo "\tnpmglobals: list globally installed npm packages"
    echo "\tpypi <pkg> - get releases for pypi package"
    echo "\tpipcompat [-a] - get current compatibility tag (different on each python interpretor)"
    echo "\tdockersize (<repo>|\"\") <image_name> <tag_name> - get size, in MB, of image"
    echo "\t\t-a: list all, if not provided then only main returned"
}

case "$1" in
    myip)
        myip
        ;;
    dostat)
        dostat "$2"
        ;;
    pltoxml)
        pltoxml "$2"
        ;;
    xmltopl)
        xmltopl "$2"
        ;;
    fzfpreivew)
        fzfpreview
        ;;
    fzfp)
        fzfp
        ;;
    fzfpp)
        fzfpp
        ;;
    fzfppls)
        fzfppls
        ;;
    npmglobals)
        npmglobals
        ;;
    pypi)
        pypi "$2"
        ;;
    pipcompat)
        pipcompat "$2"
        ;;
    dockersize)
        dockersize "$2" "$3" "$4"
        ;;
    help)
        usage
        ;;
    *)
        echo "Invalid command: $@"
        usage
        exit 1
        ;;
esac

