#!/bin/zsh

#====================#
# Pypi / pip Helpers #
#====================#

function pypi() {
    # this works but is deprecated (especially releases key, which may be removed)
    # they are switching to https://peps.python.org/pep-0691/
    # curl -s https://pypi.org/pypi/$1/json | jq -r '.releases | to_entries[] | (.key) + ": " + .value[].filename'
    #
    # pep 691 compliant
    # -s: silent, -L: follow redirect
    curl -s -L --header "Accept: application/vnd.pypi.simple.v1+json" https://pypi.org/simple/$1/ | jq -r '.files[] | .filename'

    # pretty good python lib for this: https://pypi.org/project/pypi-simple/
}

# https://packaging.pypa.io/en/stable/tags.html
# https://packaging.python.org/en/latest/specifications/platform-compatibility-tags/
function pipcompat() {
    if [ "$1" = "-a" ];
    then
        python -c "from packaging.tags import sys_tags;print('\n'.join([f'{t.interpreter}-{t.abi}-{t.platform}' for t in list(sys_tags())]))"
    else
        # below 2 are same, second is more modern
        # distutils is deprecated as of 3.10 and will be removed in 3.12
        #
        #python -c "import distutils ;print(distutils.util.get_platform())"
        python -c "import sysconfig ;print(sysconfig.get_platform())" | tr '-' '_' | tr '.' '_'
    fi
}

function usage() {
    echo "Usage: githelpers <cmd> [<args>]"
    echo "Available commands:"
    echo "\thelp: usage (this message)"
    echo "\tpypi <pkg> - get releases for pypi package"
    echo "\tpipcompat [-a] - get current compatibility tag (different on each python interpretor)"
    echo "\t\t-a: list all, if not provided then only main returned"
}

case "$1" in
    pypi)
        pypi "$2"
        ;;
    pipcompat)
        pipcompat "$2"
        ;;
    help)
        usage
        ;;
    *)
        echo "Invalid command: $@"
        usage
        exit 1
        ;;
esac

